/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package randomizer.Pokemon_TCG;

import java.io.File;

import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

import randomizer.RandomizerUI;

/**
 *
 * @author Andrew
 */
public class PTCG1_UI extends RandomizerUI {

    /**
     * Creates new form PTCG1_UI
     */
    public PTCG1_UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moveCost_buttons = new javax.swing.ButtonGroup();
        randomizeMovesGroup = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        prepatch_panel = new javax.swing.JPanel();
        deleteInvisibleWall = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        movesCostSame = new javax.swing.JRadioButton();
        movesCostColorless = new javax.swing.JRadioButton();
        movesCostNothing = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        sanquiTutorialPatch = new javax.swing.JCheckBox();
        randomize_panel = new javax.swing.JPanel();
        randomizeHealth = new javax.swing.JCheckBox();
        healthLow = new javax.swing.JSpinner();
        healthHigh = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        randomizeSets = new javax.swing.JCheckBox();
        randomizeDecks = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        dontRandomizeMoves = new javax.swing.JRadioButton();
        randomizeMovesInStages = new javax.swing.JRadioButton();
        randomizeMovesFully = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        saveRom = new javax.swing.JButton();

        deleteInvisibleWall.setText("Delete Mr. Mime's Invisible Wall ability");
        deleteInvisibleWall.setToolTipText("Note: only Mr. Mime can use this ability anywa");

        moveCost_buttons.add(movesCostSame);
        movesCostSame.setText("Don't change move costs");
        movesCostSame.setToolTipText("Do you really need a tool tip for this one?");

        moveCost_buttons.add(movesCostColorless);
        movesCostColorless.setText("Make moves cost colorless energy");
        movesCostColorless.setToolTipText("All energy costs will be replaced with an equal amount of colorless energy");

        moveCost_buttons.add(movesCostNothing);
        movesCostNothing.setText("Make moves cost nothing");
        movesCostNothing.setToolTipText("All energy costs will appear to be \"poison\"");

        sanquiTutorialPatch.setText("Remove tutorial");
        sanquiTutorialPatch.setToolTipText("Credit: Sanquii");

        javax.swing.GroupLayout prepatch_panelLayout = new javax.swing.GroupLayout(prepatch_panel);
        prepatch_panel.setLayout(prepatch_panelLayout);
        prepatch_panelLayout.setHorizontalGroup(
            prepatch_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(prepatch_panelLayout.createSequentialGroup()
                .addGroup(prepatch_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteInvisibleWall, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                    .addGroup(prepatch_panelLayout.createSequentialGroup()
                        .addGroup(prepatch_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movesCostColorless)
                            .addComponent(movesCostNothing)
                            .addComponent(movesCostSame))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(prepatch_panelLayout.createSequentialGroup()
                .addComponent(sanquiTutorialPatch)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        prepatch_panelLayout.setVerticalGroup(
            prepatch_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(prepatch_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteInvisibleWall)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movesCostSame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movesCostColorless)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movesCostNothing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sanquiTutorialPatch)
                .addContainerGap())
        );

        tabs.addTab("Prepatch", prepatch_panel);

        randomizeHealth.setText("Randomize Pokemon health");
        randomizeHealth.setToolTipText("On the range set below.");

        healthLow.setModel(new javax.swing.SpinnerNumberModel(10, 10, 120, 10));
        healthLow.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                healthLowStateChanged(evt);
            }
        });

        healthHigh.setModel(new javax.swing.SpinnerNumberModel(120, 10, 120, 10));
        healthHigh.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                healthHighStateChanged(evt);
            }
        });

        jLabel1.setText("Min:");

        jLabel2.setText("Max:");

        randomizeSets.setText("Randomize booster packs");
        randomizeSets.setToolTipText("Randomize what set each pokemon comes from");

        randomizeDecks.setText("Randomize decks");
        randomizeDecks.setToolTipText("Randomizes preconstructed decks");

        randomizeMovesGroup.add(dontRandomizeMoves);
        dontRandomizeMoves.setText("Don't randomize moves");
        dontRandomizeMoves.setToolTipText("Keep all moves the same");

        randomizeMovesGroup.add(randomizeMovesInStages);
        randomizeMovesInStages.setText("Randomize moves withing stage");
        randomizeMovesInStages.setToolTipText("randomize moves, but make sure pokemon only get moves from others in the same stage");

        randomizeMovesGroup.add(randomizeMovesFully);
        randomizeMovesFully.setText("Randomize moves fully");
        randomizeMovesFully.setToolTipText("Ignore stages, any pokemon can get any moves");

        javax.swing.GroupLayout randomize_panelLayout = new javax.swing.GroupLayout(randomize_panel);
        randomize_panel.setLayout(randomize_panelLayout);
        randomize_panelLayout.setHorizontalGroup(
            randomize_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randomize_panelLayout.createSequentialGroup()
                .addGroup(randomize_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, randomize_panelLayout.createSequentialGroup()
                        .addGroup(randomize_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(randomize_panelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(healthLow, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(randomizeHealth))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(healthHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(randomizeDecks, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(randomizeSets, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator3)
            .addGroup(randomize_panelLayout.createSequentialGroup()
                .addGroup(randomize_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dontRandomizeMoves)
                    .addComponent(randomizeMovesInStages)
                    .addComponent(randomizeMovesFully))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        randomize_panelLayout.setVerticalGroup(
            randomize_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randomize_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(randomizeHealth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(randomize_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healthLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(healthHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomizeSets)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomizeDecks)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dontRandomizeMoves)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomizeMovesInStages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomizeMovesFully)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Randomize", randomize_panel);

        saveRom.setText("Save Rom");
        saveRom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveRomActionPerformed(evt);
            }
        });
        jPanel1.add(saveRom);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveRomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveRomActionPerformed
        saveRom();
    }//GEN-LAST:event_saveRomActionPerformed

    private void healthLowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_healthLowStateChanged
        ((SpinnerNumberModel)healthHigh.getModel()).setMinimum((Comparable) ((SpinnerNumberModel)(healthLow.getModel())).getNumber());
    }//GEN-LAST:event_healthLowStateChanged

    private void healthHighStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_healthHighStateChanged
        ((SpinnerNumberModel)healthLow.getModel()).setMaximum((Comparable) ((SpinnerNumberModel)(healthHigh.getModel())).getNumber());
    }//GEN-LAST:event_healthHighStateChanged

    public void saveRom(){

		PTCG1_Randomizer rando = new PTCG1_Randomizer(gameFile);

		//prepatch stuff here
		if(deleteInvisibleWall.isSelected()){
			rando.deleteInvisibleWallMove();		
		}
		if(sanquiTutorialPatch.isSelected()){
			rando.SanquiRemoveTutorialFromRom();
		}


		if(movesCostNothing.isSelected()){
			rando.setAllEnergyToColorless(true);
		}
		else if(movesCostColorless.isSelected()){
			rando.setAllEnergyToColorless(false);
		}



		//Random stuff here
		if(randomizeHealth.isSelected()){
			rando.randomizeHP((Integer)((SpinnerNumberModel)healthLow.getModel()).getNumber(), (Integer) ((SpinnerNumberModel)healthHigh.getModel()).getNumber());
		}
		if(randomizeDecks.isSelected()){
			rando.randomizeDeckPointersInRom();
		}
		if(randomizeSets.isSelected()){
			rando.randomizeAllSets();			
		}

		if(randomizeMovesInStages.isSelected()){
			rando.randomizeMoves(true, false);
		}
		else if(randomizeMovesFully.isSelected()){
			rando.randomizeMoves(false, false);
		}


		fc.setSelectedFile(new File("TCG Randomized.gbc"));
		fc.showOpenDialog(PTCG1_UI.this);

		String romLoc = fc.getSelectedFile().getAbsolutePath();
		if(romLoc.endsWith(".gbc"))
			romLoc += ".gbc";

		rando.saveRom(fc.getSelectedFile().getAbsolutePath());
		
		//note: add check to see if it saved properly
		JOptionPane.showMessageDialog(null, "Finished Saving Rom.");

	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox deleteInvisibleWall;
    private javax.swing.JRadioButton dontRandomizeMoves;
    private javax.swing.JSpinner healthHigh;
    private javax.swing.JSpinner healthLow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.ButtonGroup moveCost_buttons;
    private javax.swing.JRadioButton movesCostColorless;
    private javax.swing.JRadioButton movesCostNothing;
    private javax.swing.JRadioButton movesCostSame;
    private javax.swing.JPanel prepatch_panel;
    private javax.swing.JCheckBox randomizeDecks;
    private javax.swing.JCheckBox randomizeHealth;
    private javax.swing.JRadioButton randomizeMovesFully;
    private javax.swing.ButtonGroup randomizeMovesGroup;
    private javax.swing.JRadioButton randomizeMovesInStages;
    private javax.swing.JCheckBox randomizeSets;
    private javax.swing.JPanel randomize_panel;
    private javax.swing.JCheckBox sanquiTutorialPatch;
    private javax.swing.JButton saveRom;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
